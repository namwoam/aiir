'''作業三：OpenCV瞌睡偵測 Level 2 提示'''
import cv2 # 匯入 openCV 套件
import numpy as np # 匯入 Numpy 套件

# 載入哈爾小波級聯正臉偵測訓練集(用CascadeClassifier())

# 建立視訊物件並讀取影片檔

## 讀取視訊參數 ##
#視訊畫面高(用.get)
#視訊畫面寬(用.get)
#視訊幀率(用.get)
#視訊總幀數(用.get)

#畫面編號(預設0)

# 用無窮迴圈讀取影片中每個畫格(幀)   
    # 讀取影片中的畫格(用.read())
    # 若有讀取到影片中的畫格
        # 畫面數量加 1

        ###### 偵測膚色 #######
        # ROI是高寬25%:75%範圍
        # 將ROI從 BGR 轉換至 HSV 色空間(用 cvtColor())
        # 定義 HSV (hue, saturation, value) 空間的膚色上下界範圍(下界約 (0,50,50), 上界約 (80,180,220))
        # 註：HSV的範圍上限 [180, 256, 256]
        # 取HSV色空間下，ROI範圍內的膚色遮罩(用inRange())
        # 算出膚色面積率，也就膚色遮罩非零數值佔遮罩面積的比率(用np.count_nonzero()，可用mask[:]忽略維度，用round(,精度)四捨五入)
        # 如果膚色面積率高於0.07，代表「有膚色」，否則代表「無膚色」
        # 將膚色遮罩轉換為彩色格式(用cvtColor)
        # 在遮罩上加面積率數值(用putText())       
        # 建立跟輸入影像一樣大，一樣格式的背景影像(用np.zeros())
        # 將背景影像設成灰色
        # 把膚色遮罩貼入背景影像
        
        ###### 偵測人臉 ######
        # 影像轉成灰階格式(用cvtColor())
        # 偵測正臉(用.detectMultiScale())
        # 如果正臉數量(可用len(faces))為零，代表「無正臉」
        # 否則「有正臉」
            #增加矩形框的高度
            #繪製人臉矩形框(用rectangle())
            #在人臉矩形框上方放學號文字(用putText())
        
        #### 判斷是否打瞌睡 #####
        # 如果「有膚色」但「無正臉」，在視窗中顯示"Wake Up!"字樣(最好能閃爍)
        # 如果「無膚色」且「無正臉」，在視窗中顯示"Nobody"字樣

        #水平合併膚色遮罩與人臉偵測影像(用np.hstack)，並顯示該畫格(用imshow())
        # 停每800/fps毫秒讀取鍵盤的按鍵(用waitKey())
        #當按鍵為ESC(ASCII碼為27)時跳出迴圈 
        
    # 當沒讀到影片中的畫格時，跳出迴圈

# 關閉視訊物件
# 關閉視窗